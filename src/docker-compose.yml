services:
  adminapi:
    image: alihmaidi/adminschoolapi
    container_name: adminapi
    build:
      context: .
      dockerfile: Microservices/Admin/Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      redis:
        condition: service_started
        restart: true  
      sqlserver:
        condition: service_healthy
        restart: true
        
      rabbitmq:
        condition: service_started
        restart: true
      
      consul:
        condition: service_started
        restart: true
    ports:
      - "5000:80"
  ocelotgateway:
    image: alihmaidi/ocelotgatewayschool
    container_name: ocelotgateway
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: ApiGateways/OcelotGateway/Dockerfile
    depends_on:
      - adminapi
      - teacherapi
      - consul
    ports:
      - "5005:80"
    
  redis:
    image: redis
    container_name: redis
    ports:
      - "6378:6379"
  sqlserver:
    image: "mcr.microsoft.com/mssql/server"
    container_name: sqlserver
    ports:
      - "1435:1433"
    environment:
      SA_PASSWORD: "S3cur3P@ssW0rd!"
      ACCEPT_EULA: "Y"
    restart: always
    
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "S3cur3P@ssW0rd!" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 20
      start_period: 10s
      
        
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.1
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"  
  webstatus:
    image: alihmaidi/webstatus
    container_name: webstatus
    build:
      context: .
      dockerfile: WebStatus/WebStatus/Dockerfile
    ports:
      - "5006:80"
    depends_on:
      - adminapi

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    restart: always
    depends_on:
      - adminapi
    ports:
      - "16686:16686"
      - "5775:5775/udp"
      - "4317:4317"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
  
  teacherapi:
    image: alihmaidi/teacherapi
    container_name: teacherapi        
    build:
      context: .
      dockerfile: Microservices/Teacher/Command/Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      redis:
        condition: service_started
        restart: true
      sqlserver:
        condition: service_healthy
        restart: true
      rabbitmq:
        condition: service_started
        restart: true
      
      consul:
        condition: service_started
        restart: true
        
    
    ports:
      - "5004:80"
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  classapi:
    image: alihmaidi/classapi
    container_name: classapi
    build:
      context: .
      dockerfile: Microservices/Class/Api/Dockerfile

    ports:
      - "5001:80"
    
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      redis:
        condition: service_started
        restart: true
      sqlserver:
        condition: service_healthy
        restart: true
      rabbitmq:
        condition: service_started
        restart: true
      consul:
        condition: service_started
        restart: true
  
  consul:
    container_name: consul
    image: consul
    ports:
      - 8501:8500
      - 8600:8600/tcp
        